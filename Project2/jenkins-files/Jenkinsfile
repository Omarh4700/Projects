pipeline {
    agent {
        kubernetes {
            label 'jenkins-agent'
            defaultContainer 'jnlp'
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    jenkins: slave
spec:
  serviceAccountName: jenkins
  containers:
    - name: jnlp
      image: jenkins/inbound-agent:latest
      args: ['\$(JENKINS_SECRET)', '\$(JENKINS_NAME)']
      tty: true
    - name: docker
      image: docker:27-cli
      command:
        - cat
      tty: true
      securityContext:
        privileged: true
      volumeMounts:
        - name: docker-sock
          mountPath: /var/run/docker.sock
    - name: helm
      image: alpine/helm:3.13.1
      command:
        - cat
      tty: true
  volumes:
    - name: docker-sock
      hostPath:
        path: /var/run/docker.sock
"""
        }
    }

    environment {
        REGISTRY = "docker.io/omar4700"
        Docker_Cred = credentials('DockerHub-Cred')
        NAMESPACE = "dev"
    }

    stages {
        stage('Checkout Code') {
            steps {
                container('jnlp') {
                    echo "Checking out code..."
                    checkout scmGit(
                        branches: [[name: '*/main']],
                        userRemoteConfigs: [[url: 'https://github.com/Omarh4700/Projects.git']]
                    )
                }
            }
        }

        stage('Build Images') {
            steps {
                container('docker') {
                    script {
                        echo "Building Docker images with tag: ${BUILD_NUMBER}"
                        sh """
                            docker build -t ${REGISTRY}/backend:${BUILD_NUMBER} ./backend
                            docker build -t ${REGISTRY}/proxy:${BUILD_NUMBER} ./proxy
                            docker build -t ${REGISTRY}/database:${BUILD_NUMBER} ./database
                        """
                    }
                }
            }
        }

        stage('Push Images') {
            steps {
                container('docker') {
                    script {
                        echo "Pushing Docker images to registry..."
                        sh """
                            echo $Docker_Cred_PSW | docker login -u $Docker_Cred_USR --password-stdin
                            docker push ${REGISTRY}/backend:${BUILD_NUMBER}
                            docker push ${REGISTRY}/proxy:${BUILD_NUMBER}
                            docker push ${REGISTRY}/database:${BUILD_NUMBER}
                        """
                    }
                }
            }
        }

        stage('Deploy to K8s using Helm') {
            steps {
                container('helm') {
                    script {
                        echo "Deploying application to Kubernetes using Helm..."
                        sh """
                            helm upgrade --install myapp ./helm-chart \
                            --namespace ${NAMESPACE} \
                            --set backend.image=${REGISTRY}/backend:${BUILD_NUMBER} \
                            --set proxy.image=${REGISTRY}/proxy:${BUILD_NUMBER} \
                            --set database.image=${REGISTRY}/database:${BUILD_NUMBER}
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            mail to: 'hassanomar4700@gmail.com',
                 subject: "Jenkins Build #${BUILD_NUMBER} Succeeded",
                 body: """\
The Jenkins build #${BUILD_NUMBER} has completed successfully.

Project: ${JOB_NAME}
Build URL: ${BUILD_URL}
"""
        }
        failure {
            mail to: 'hassanomar4700@gmail.com',
                 subject: "Jenkins Build #${BUILD_NUMBER} Failed",
                 body: """\
The Jenkins build #${BUILD_NUMBER} has failed.

Project: ${JOB_NAME}
Build URL: ${BUILD_URL}

Please check the Jenkins logs for details.
"""
        }
    }
}
