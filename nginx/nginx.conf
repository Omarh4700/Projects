# Server block to redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name localhost; # Replace with your domain if you have one
    
    # Redirect to the HTTPS version of the site
    return 301 https://$host$request_uri;
}

# The main server block for handling HTTPS traffic
server {
    listen 443 ssl;
    server_name localhost; # Replace with your domain if you have one

    # --- SSL Configuration ---
    # Point to the certificate and key files we generated
    #For docker 
       # ssl_certificate /etc/nginx/ssl/nginx.crt;
       # ssl_certificate_key /etc/nginx/ssl/nginx.key;

    #For K8s 
        ssl_certificate     /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
    
    # Improve SSL security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # --- Proxy Configuration ---
    location / {
        # This is the crucial part:
        # It forwards the request to your backend API container.
        # as defined in your docker-compose.yml or Docker network.
        proxy_pass http://api:8000;

        # Standard headers to pass along to the backend service
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}